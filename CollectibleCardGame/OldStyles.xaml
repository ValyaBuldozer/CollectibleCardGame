<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CollectibleCardGame">

    <Color x:Key="WindowBackColor">#E7E7E7</Color>

    <Style TargetType="Button" x:Key="ButtonNeutralStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="#FF494949" />
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>

        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderThickness="1" CornerRadius="2" BorderBrush="#FFC5C3C3" >
                        <Grid Background="{TemplateBinding Background}" >

                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="3,3,3,3"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background"  Value="White"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <ControlTemplate  x:Key="ButtonNeutral" TargetType="Button">
        <Border BorderBrush="#FFC5C3C3" BorderThickness="1" CornerRadius="2" Name="border"
                    TextBlock.Foreground="#FF494949" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"  Cursor="Hand"  >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1" Color="WhiteSmoke"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="White"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="ButtonGreenStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FF56A433" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>

        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderThickness="1" CornerRadius="2" BorderBrush="#FF4A9029" >
                        <Grid Background="{TemplateBinding Background}" >

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="3,3,3,3"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background"  Value="#FF67B849"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="BigButtonGreenStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FF56A433" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>

        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderThickness="1" CornerRadius="2" BorderBrush="#FF4A9029" >
                        <Grid Background="{TemplateBinding Background}" >

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="10,10,10,10"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background"  Value="#FF67B849"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate  x:Key="ButtonOK" TargetType="Button">
        <Border BorderBrush="#FF4A9029" BorderThickness="1" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1" Color="#FF56A433"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#FF67B849"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="ButtonSaveStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="TextBlock.Foreground" Value="#333333" />
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderThickness="1" CornerRadius="2" BorderBrush="#EDEDED" >
                        <Grid>

                            <ContentPresenter   VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"   Margin="{TemplateBinding Padding}"></ContentPresenter>
                            <Grid  Margin="0,0,0,0" Background="#EDEDED">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>




                                <Image Grid.Column="0" Width="20" Height="20" Margin="10,0,0,0" Source="Images/save.png" />

                                <TextBlock  Margin="3,3,3,3" FontSize="{TemplateBinding FontSize}"  VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="1"  Text="{TemplateBinding Tag}" />



                            </Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter  Property="Background"  Value="#DFDFDF" ></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>


            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate  x:Key="ButtonSave" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="2" Name="border"
                    TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <ContentPresenter   VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"   Margin="{TemplateBinding Padding}"></ContentPresenter>
                <Grid  Margin="5,2,0,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>




                    <Image Grid.Column="0" Width="20" Height="20" Margin="10,0,0,0" Source="Images/save.png" />

                    <TextBlock  Margin="3,3,3,3" FontSize="{TemplateBinding FontSize}"  VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="1"  Text="{TemplateBinding Tag}" />


                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate  x:Key="ButtonAdd" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="5,5,5,5" Source="Images/add.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonEdit" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="5,5,5,5" Source="Images/additeGray.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonDelete" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="5,5,5,5" Source="Images/trashOrange.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonImport" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="5,5,5,5" Source="Images/import.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonDeleteBase" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="5,5,5,5" Source="Images/deleteBase.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#DFDFDF"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonClose" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="0" CornerRadius="5" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <Image VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,0,0" Source="Images/close.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#8D9298"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate  x:Key="ButtonControlItem" TargetType="Button">
        <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="2" Name="border"
                TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center"   Cursor="Hand">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1"  Color="#90CAF9"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <ContentPresenter   VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"   Margin="{TemplateBinding Padding}"></ContentPresenter>
                <Grid  Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>





                    <TextBlock  Margin="0,0,0,0" FontSize="{TemplateBinding FontSize}"  VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="0"  Text="{TemplateBinding Tag}" />
                    <Button Template="{StaticResource ButtonClose}"  Grid.Column="1"  Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="Transparent" >


                    </Button>


                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"  Value="DodgerBlue"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#ECEDE8"/>
                <Setter Property="Foreground" Value="#8D9298"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

   


    <Style TargetType="Button" x:Key="ButtonStyleItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FF9B1B" />
        <Setter Property="Foreground" Value="#FFF8DC" />
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>

        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  BorderThickness="0" CornerRadius="0">
                        <Grid Background="{TemplateBinding Background}" >

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="10,0,10,0"
                                              MinWidth="5"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background"  Value="#EC8C1B"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <ControlTemplate  x:Key="ButtonCloseBySymbolItem" TargetType="Button">
        <Border BorderThickness="0" CornerRadius="0" Name="border"
                TextBlock.Foreground="#F7C283"   TextBlock.FontWeight="Bold"  TextBlock.TextAlignment="Center"   Cursor="Hand" Margin="0,0,0,0" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="1" Color="#FF9B1B"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid Name="Grid">

                <TextBlock   Name="TextBlock"  Margin="0,0,0,0" FontSize="10"   VerticalAlignment="Center" HorizontalAlignment="Center"    Text="╳" Width="15" Height="15"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>


            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TextBlock" Property="Foreground"  Value="White"></Setter>

            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="TextBlock" Property="Visibility"  Value="Hidden"></Setter>

            </Trigger>




        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="ButtonCloseBySymbolTab" TargetType="Button">
        <Border BorderBrush="#EDEDED" BorderThickness="0" CornerRadius="0" Name="border"
                TextBlock.Foreground="{TemplateBinding Foreground}"  TextBlock.FontWeight="Bold"  TextBlock.TextAlignment="Center"   Cursor="Hand" >
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>

                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <TextBlock  Name="TextBlock"  Margin="0,0,0,0" FontSize="10"  VerticalAlignment="Center" HorizontalAlignment="Center"    Text="╳" Width="15" Height="15"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>


            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TextBlock" Property="Foreground"  Value="#D7B860"></Setter>
            </Trigger>



        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="CustomTabItem" TargetType="{x:Type TabItem}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border BorderBrush="#EDEDED" BorderThickness="1" CornerRadius="0" Margin="0,0,5,0" Name="border"
                            TextBlock.Foreground="#333333"  TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center" >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStopCollection>
                                    <GradientStop Offset="1"  Color="#EDEDED"></GradientStop>
                                </GradientStopCollection>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>


                            <Grid  Margin="1,1,1,1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>






                                <ContentPresenter   Margin="5,0,5,0"   Grid.Column="0"  VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header"  ></ContentPresenter>

                                <Button Name="button"  Template="{DynamicResource ButtonCloseBySymbolTab}" Grid.Column="1" BorderThickness="0" Cursor="Hand" />






                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="button"  Property="Foreground" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="button"  Property="Foreground" Value="#E7E7E7" />
                        </Trigger>


                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border"  Property="Background" Value="#EDEDED" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border"  Property="TextBlock.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger  Property="IsSelected" Value="False">
                            <Setter TargetName="border"  Property="Background" Value="#4F5663" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#FF9FAAB4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ListBoxItemMain" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="#9BA5B1"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="#29303C"
                            BorderThickness="0 0 0 1"
                            Background="{TemplateBinding Background}"
                            Padding="1"
                            SnapsToDevicePixels="true">


                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             TextBlock.FontWeight="Bold"
                            Margin="5,10,0,10"/>


                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#1F2530" />
                            <Setter Property="Foreground"
                                    Value="#609F30"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsMouseOver"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#29303C" />
                            <Setter Property="Foreground"
                                    Value="#9BA5B1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="True"  />

                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#1F2530" />
                            <Setter Property="Foreground"
                                    Value="#609F30"/>


                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListBoxItemNormal" TargetType="ListBoxItem">
        <Setter Property="MinWidth" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                        <Grid  Margin="5,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Margin="5,0,5,0"  Grid.Column="0" FontSize="16" Text="{Binding Path=Title}"/>
                            <Button Name="Btn" Template="{StaticResource ButtonEdit}"  HorizontalAlignment="Right" Margin="0,0,10,0" Visibility="Hidden" Width="25" Height="25" Grid.Column="1" BorderBrush="Transparent" Background="Transparent" >

                            </Button>


                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" 
                                 Value="False" />
                                <Condition Property="IsSelected" 
                                 Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                TargetName="Bd" 
                                Value="#FFF7F0D6" />
                            <Setter Property="Visibility"
                                    TargetName="Btn"
                                    Value="Hidden"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsMouseOver"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                   Value="#F3F3F3" />
                            <Setter Property="Visibility"
                                    TargetName="Btn"
                                    Value="Visible"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" 
                                 Value="True" />
                                <Condition Property="IsSelected" 
                                 Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                TargetName="Bd" 
                                Value="#FFF7F0D6" />
                            <Setter Property="Visibility"
                                    TargetName="Btn"
                                    Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsMouseOver" 
                                           Value="True" />
                                <Condition Property="IsSelected" 
                                           Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility"
                                    TargetName="Btn"
                                    Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsMouseOver" 
                                           Value="False" />
                                <Condition Property="IsSelected" 
                                           Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility"
                                    TargetName="Btn"
                                    Value="Hidden"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonMenu" TargetType="Button">
        <Border BorderBrush="LightGray" BorderThickness="3" CornerRadius="2" Name="border"
                    TextBlock.Foreground="LightGray" TextBlock.FontSize="20" TextBlock.FontWeight="Bold" TextBlock.TextAlignment="Center" Cursor="Hand">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStopCollection>
                        <GradientStop Offset="0" Color="#FF343B49"></GradientStop>
                        <GradientStop Offset="1" Color="#FF343B49"></GradientStop>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>

                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush"  Value="#FF64A531"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="TextBlock.Foreground"  Value="#FF64A531"></Setter>
            </Trigger>


            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush"  Value="#FF64A531"></Setter>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="border" Property="TextBlock.Foreground"  Value="#FF64A531"></Setter>
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="border" Property="Background"  Value="#FF1F2530"></Setter>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="validationFailed">
        <StackPanel Orientation="Horizontal">
            <Border BorderBrush="Red" BorderThickness="0" CornerRadius="2">
                <AdornedElementPlaceholder />
            </Border>

        </StackPanel>
    </ControlTemplate>

    <Style x:Key="TextBoxMulti" TargetType="{x:Type TextBoxBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="true"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border 
                        Name="Border"
                        CornerRadius="2" 
                        Padding="2"
                        Background="White"
                        BorderBrush="LightGray"
                        BorderThickness="1" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"  Value="#FF61963C"></Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">

                            <Setter TargetName="Border"  Property="BorderBrush"  Value="Red"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxMultiSpec" TargetType="{x:Type TextBoxBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="true"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border 
                        Name="Border"
                        CornerRadius="0" 
                        Padding="2"
                        Background="White"
                        BorderBrush="Black"
                        BorderThickness="1 0 1 0" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkGray"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"  Value="#FF61963C"></Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">

                            <Setter TargetName="Border"  Property="BorderBrush"  Value="Red"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxNormal" TargetType="{x:Type ComboBox}">

    </Style>



    <ControlTemplate  x:Key="TextBoxNormal" TargetType="TextBox" >
        <Border x:Name="border" CornerRadius="2" VerticalAlignment="Center"
        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush"  Value="#FF61963C"></Setter>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">

                <Setter TargetName="border" Property="BorderBrush"  Value="Red"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>

            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="TextBoxValidate" TargetType="TextBox" >
        <Border x:Name="border" CornerRadius="2" VerticalAlignment="Center"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </Border>

        <ControlTemplate.Triggers>

        </ControlTemplate.Triggers>
    </ControlTemplate>



    <ControlTemplate  x:Key="CheckBoxNormal" TargetType="CheckBox">
        <BulletDecorator>
            <BulletDecorator.Bullet>
                <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="30" MinWidth="30" ShowGridLines="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="4*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>

                    <Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

                    <Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="#808080" />

                    <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

                    <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3"
                                  Stretch="Fill"
                                  Stroke="#3babe3" />

                    <Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="#808080" />
                </Grid>
            </BulletDecorator.Bullet>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>